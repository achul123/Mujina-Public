package io.github.lefraudeur.modules.exploit;

import io.github.lefraudeur.events.PreTickEvent;
import io.github.lefraudeur.modules.Category;
import io.github.lefraudeur.modules.Info;
import io.github.lefraudeur.modules.Module;
import net.minecraft.client.MinecraftClient;

@Info(category = Category.EXPLOIT, name = "BroIthinkULAGGING", description = "God mother fucking DAMMMMMN", key = Module.key_none)
public class Timer extends Module
{
    private enum Action {
        CANCEL,
        DOUBLE,
        NORMAL,
        DELAY
    }

    // Simplified actions array with less repetition
    private final Action[] actions = {
        Action.CANCEL, Action.CANCEL, Action.DOUBLE, Action.DOUBLE, Action.DOUBLE,
        Action.NORMAL, Action.CANCEL, Action.CANCEL, Action.DOUBLE, Action.DOUBLE,
        Action.NORMAL, Action.DOUBLE, Action.CANCEL, Action.NORMAL, Action.NORMAL,
        Action.NORMAL, Action.DOUBLE, Action.NORMAL, Action.CANCEL, Action.NORMAL
    };

    private int actionIndex = 0;

    @Override
    public void onPreTickEvent(PreTickEvent event)
    {
        // Use a switch expression for more concise code
        switch (actions[actionIndex]) {
            case CANCEL -> event.setCancelled(true);
            case DELAY -> delayTick(event);
            case DOUBLE -> MinecraftClient.getInstance().tick();
            case NORMAL -> { /* Do nothing, just proceed with normal tick */ }
        }

        actionIndex = (actionIndex + 1) % actions.length;
    }

    private void delayTick(PreTickEvent event) {
        // Introduce a delay without blocking the main thread
        event.setCancelled(true);
        MinecraftClient.getInstance().execute(() -> {
            try {
                Thread.sleep(20);  // Delay without blocking the main thread
            } catch (InterruptedException e) {
                Thread.currentThread().interrupt();
            }
            event.setCancelled(false);
        });
    }
}